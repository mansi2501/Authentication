{"ast":null,"code":"var _jsxFileName = \"/Users/indianic/Desktop/Mansi/Authentication/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggendIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggendIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/indianic/Desktop/Mansi/Authentication/src/store/auth-context.js"],"names":["React","useState","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","userIsLoggendIn","logoutHandler","removeItem","clearTimeout","loginHandler","setItem","remainingTime","setTimeout","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;;AAEA,IAAIC,WAAJ;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACpCC,EAAAA,KAAK,EAAE,EAD6B;AAEpCC,EAAAA,UAAU,EAAE,KAFwB;AAGpCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHgB;AAIpCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJoB,CAApB,CAApB;;AAOA,MAAMC,sBAAsB,GAAIC,cAAD,IAAoB;AAC/C,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AAEA,QAAME,iBAAiB,GAAGD,iBAAiB,GAAGH,WAA9C;AAEA,SAAOI,iBAAP;AACH,CAPD;;AASA,MAAMC,mBAAmB,GAAG,MAAM,CAEjC,CAFD;;AAIA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAAChB,KAAD,EAAQiB,QAAR,IAAoBrB,QAAQ,CAACkB,YAAD,CAAlC;AACA,QAAMI,eAAe,GAAG,CAAC,CAAClB,KAA1B;;AAEA,QAAMmB,aAAa,GAAG,MAAK;AACvBF,IAAAA,QAAQ,CAAE,IAAF,CAAR;AACAF,IAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;;AAEA,QAAGvB,WAAH,EAAe;AACXwB,MAAAA,YAAY,CAACxB,WAAD,CAAZ;AACH;AACJ,GAPD;;AASA,QAAMyB,YAAY,GAAG,CAACtB,KAAD,EAAQK,cAAR,KAA0B;AAC3CY,IAAAA,QAAQ,CAACjB,KAAD,CAAR;AACAe,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BvB,KAA9B;AAEA,UAAMwB,aAAa,GAAGpB,sBAAsB,CAACC,cAAD,CAA5C;AAEAR,IAAAA,WAAW,GAAG4B,UAAU,CAACN,aAAD,EAAgBK,aAAhB,CAAxB;AACH,GAPD;;AASA,QAAME,YAAY,GAAG;AACjB1B,IAAAA,KAAK,EAAEA,KADU;AAEjBC,IAAAA,UAAU,EAAEiB,eAFK;AAGjBhB,IAAAA,KAAK,EAAEoB,YAHU;AAIjBnB,IAAAA,MAAM,EAAEgB;AAJS,GAArB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEO,YAA7B;AAAA,cACKb,KAAK,CAACc;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnCM;;GAAMf,mB;;KAAAA,mB;AAqCb,eAAed,WAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react/cjs/react.development\";\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n    token: '',\n    isLoggedIn: false,\n    login: (token) => {},\n    logout: () => {}\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n    const currentTime = new Date().getTime();\n    const adjExpirationTime = new Date(expirationTime).getTime();\n\n    const remainingDuration = adjExpirationTime - currentTime;\n\n    return remainingDuration;\n}\n\nconst retrieveStoredToken = () => {\n    \n}\n\nexport const AuthContextProvider = (props) => {\n    const initialToken = localStorage.getItem('token');\n    const [token, setToken] = useState(initialToken);\n    const userIsLoggendIn = !!token;\n        \n    const logoutHandler = () =>{\n        setToken (null);\n        localStorage.removeItem('token')\n\n        if(logoutTimer){\n            clearTimeout(logoutTimer);\n        }\n    }\n\n    const loginHandler = (token, expirationTime) =>{\n        setToken(token);\n        localStorage.setItem('token', token);\n\n        const remainingTime = calculateRemainingTime(expirationTime);\n\n        logoutTimer = setTimeout(logoutHandler, remainingTime)\n    }\n    \n    const contextValue = {\n        token: token,\n        isLoggedIn: userIsLoggendIn,\n        login: loginHandler,\n        logout: logoutHandler\n    }\n \n    return (\n        <AuthContext.Provider value={contextValue}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}